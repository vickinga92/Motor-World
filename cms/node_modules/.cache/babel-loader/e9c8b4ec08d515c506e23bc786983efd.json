{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/PROYECTOS/vikijor/MotorWorld/Motor-World/cms/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport './App.css'; //Componente Login\n\nimport Login from './components/login/Login'; //Componentes Estáticos\n\nimport Header from './components/header/Header';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Footer from './components/footer/Footer'; //Componentes Dinámicos\n\nimport Usuarios from './components/contents/usuarios/Usuarios';\nimport Motos from './components/contents/motos/Motos';\nimport Error404 from './components/contents/error404/Error404';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const auth = getAccessToken();\n\n  if (!auth) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-mini\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Usuarios\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/motos\",\n            component: Motos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: Error404\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n/*=============================================\nFunción para tener acceso al token\n=============================================*/\n\n_c = App;\n\nconst getAccessToken = () => {\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  const id = localStorage.getItem(\"ID\");\n  const usuario = localStorage.getItem(\"USUARIO\");\n\n  if (!accessToken || accessToken === null || !id || id === null || !usuario || usuario === null) {\n    return false;\n  }\n\n  const metaToken = jwtDecode(accessToken);\n\n  if (!metaToken) {\n    return false;\n  }\n\n  if (tokenExpira(accessToken, metaToken) || metaToken._id !== id || metaToken.email !== usuario) {\n    return false;\n  } else {\n    return true;\n  }\n};\n/*=============================================\nFunción para verificar fecha de expiración del token\n=============================================*/\n\n\nconst tokenExpira = (accessToken, metaToken) => {\n  const seconds = 60;\n  const {\n    exp\n  } = metaToken;\n  const now = (Date.now() + seconds) / 1000;\n  return exp < now;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ubuntu/PROYECTOS/vikijor/MotorWorld/Motor-World/cms/src/App.js"],"names":["React","BrowserRouter","Switch","Route","jwtDecode","Login","Header","Sidebar","Footer","Usuarios","Motos","Error404","App","auth","getAccessToken","accessToken","localStorage","getItem","id","usuario","metaToken","tokenExpira","_id","email","seconds","exp","now","Date"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\n\nimport './App.css';\n\n//Componente Login\nimport Login from './components/login/Login';\n\n//Componentes Estáticos\nimport Header from './components/header/Header';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Footer from './components/footer/Footer';\n\n//Componentes Dinámicos\nimport Usuarios from './components/contents/usuarios/Usuarios';\nimport Motos from './components/contents/motos/Motos';\nimport Error404 from './components/contents/error404/Error404';\n\nexport default function App() {\n\n  const auth = getAccessToken();\n \n\n  if(!auth){\n\n    return(\n\n      <Login/>\n\n    )\n    \n  }\n\n  return (\n    \n    <div className=\"sidebar-mini\">\n      \n    <div className=\"wrapper\">\n\n        <Header/>\n        <Sidebar/>\n         <BrowserRouter>\n            \n            <Switch>\n              \n              <Route exact path=\"/\" component={Usuarios} />\n              <Route exact path=\"/motos\" component={Motos} />                        \n              <Route component={Error404} />\n              \n\n            </Switch>\n\n        </BrowserRouter>\n        <Footer />\n\n    </div> \n     \n    </div>\n    \n  \n  );\n}\n\n/*=============================================\nFunción para tener acceso al token\n=============================================*/\n\nconst getAccessToken = ()=>{\n\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  const id = localStorage.getItem(\"ID\");\n  const usuario = localStorage.getItem(\"USUARIO\");\n\n  if(!accessToken || accessToken === null ||\n     !id || id === null ||\n     !usuario || usuario === null\n    ){      \n\n    return false;\n\n  }\n\n const metaToken = jwtDecode(accessToken); \n\n\n if(!metaToken){\n\n  \n\n    return false;\n }\n\n if(tokenExpira(accessToken, metaToken) || metaToken._id !== id || metaToken.email !== usuario){\n\n   return false;\n\n }else{\n\n   return true;\n\n }\n\n}\n\n/*=============================================\nFunción para verificar fecha de expiración del token\n=============================================*/\n\nconst tokenExpira = (accessToken, metaToken)=>{\n\nconst seconds = 60;\n\nconst { exp } = metaToken;\n\nconst now = (Date.now()+seconds)/1000;\n\nreturn exp < now;\n\n}"]},"metadata":{},"sourceType":"module"}