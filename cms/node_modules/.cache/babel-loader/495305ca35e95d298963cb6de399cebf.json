{"ast":null,"code":"/*! Responsive 2.2.7\n * 2014-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.2.7\n * @file        dataTables.responsive.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2014-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable;\n  /**\n   * Responsive is a plug-in for the DataTables library that makes use of\n   * DataTables' ability to change the visibility of columns, changing the\n   * visibility of columns so the displayed columns fit into the table container.\n   * The end result is that complex tables will be dynamically adjusted to fit\n   * into the viewport, be it on a desktop, tablet or mobile browser.\n   *\n   * Responsive for DataTables has two modes of operation, which can used\n   * individually or combined:\n   *\n   * * Class name based control - columns assigned class names that match the\n   *   breakpoint logic can be shown / hidden as required for each breakpoint.\n   * * Automatic control - columns are automatically hidden when there is no\n   *   room left to display them. Columns removed from the right.\n   *\n   * In additional to column visibility control, Responsive also has built into\n   * options to use DataTables' child row display to show / hide the information\n   * from the table that has been hidden. There are also two modes of operation\n   * for this child row display:\n   *\n   * * Inline - when the control element that the user can use to show / hide\n   *   child rows is displayed inside the first column of the table.\n   * * Column - where a whole column is dedicated to be the show / hide control.\n   *\n   * Initialisation of Responsive is performed by:\n   *\n   * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n   *   Responsive will automatically be initialised with the default configuration\n   *   options when the DataTable is created.\n   * * Using the `responsive` option in the DataTables configuration options. This\n   *   can also be used to specify the configuration options, or simply set to\n   *   `true` to use the defaults.\n   *\n   *  @class\n   *  @param {object} settings DataTables settings object for the host table\n   *  @param {object} [opts] Configuration options\n   *  @requires jQuery 1.7+\n   *  @requires DataTables 1.10.3+\n   *\n   *  @example\n   *      $('#example').DataTable( {\n   *        responsive: true\n   *      } );\n   *    } );\n   */\n\n  var Responsive = function (settings, opts) {\n    // Sanity check that we are using DataTables 1.10 or newer\n    if (!DataTable.versionCheck || !DataTable.versionCheck('1.10.10')) {\n      throw 'DataTables Responsive requires DataTables 1.10.10 or newer';\n    }\n\n    this.s = {\n      dt: new DataTable.Api(settings),\n      columns: [],\n      current: []\n    }; // Check if responsive has already been initialised on this table\n\n    if (this.s.dt.settings()[0].responsive) {\n      return;\n    } // details is an object, but for simplicity the user can give it as a string\n    // or a boolean\n\n\n    if (opts && typeof opts.details === 'string') {\n      opts.details = {\n        type: opts.details\n      };\n    } else if (opts && opts.details === false) {\n      opts.details = {\n        type: false\n      };\n    } else if (opts && opts.details === true) {\n      opts.details = {\n        type: 'inline'\n      };\n    }\n\n    this.c = $.extend(true, {}, Responsive.defaults, DataTable.defaults.responsive, opts);\n    settings.responsive = this;\n\n    this._constructor();\n  };\n\n  $.extend(Responsive.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Constructor\n     */\n\n    /**\n     * Initialise the Responsive instance\n     *\n     * @private\n     */\n    _constructor: function () {\n      var that = this;\n      var dt = this.s.dt;\n      var dtPrivateSettings = dt.settings()[0];\n      var oldWindowWidth = $(window).innerWidth();\n      dt.settings()[0]._responsive = this; // Use DataTables' throttle function to avoid processor thrashing on\n      // resize\n\n      $(window).on('resize.dtr orientationchange.dtr', DataTable.util.throttle(function () {\n        // iOS has a bug whereby resize can fire when only scrolling\n        // See: http://stackoverflow.com/questions/8898412\n        var width = $(window).innerWidth();\n\n        if (width !== oldWindowWidth) {\n          that._resize();\n\n          oldWindowWidth = width;\n        }\n      })); // DataTables doesn't currently trigger an event when a row is added, so\n      // we need to hook into its private API to enforce the hidden rows when\n      // new data is added\n\n      dtPrivateSettings.oApi._fnCallbackReg(dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\n        if ($.inArray(false, that.s.current) !== -1) {\n          $('>td, >th', tr).each(function (i) {\n            var idx = dt.column.index('toData', i);\n\n            if (that.s.current[idx] === false) {\n              $(this).css('display', 'none');\n            }\n          });\n        }\n      }); // Destroy event handler\n\n\n      dt.on('destroy.dtr', function () {\n        dt.off('.dtr');\n        $(dt.table().body()).off('.dtr');\n        $(window).off('resize.dtr orientationchange.dtr');\n        dt.cells('.dtr-control').nodes().to$().removeClass('dtr-control'); // Restore the columns that we've hidden\n\n        $.each(that.s.current, function (i, val) {\n          if (val === false) {\n            that._setColumnVis(i, true);\n          }\n        });\n      }); // Reorder the breakpoints array here in case they have been added out\n      // of order\n\n      this.c.breakpoints.sort(function (a, b) {\n        return a.width < b.width ? 1 : a.width > b.width ? -1 : 0;\n      });\n\n      this._classLogic();\n\n      this._resizeAuto(); // Details handler\n\n\n      var details = this.c.details;\n\n      if (details.type !== false) {\n        that._detailsInit(); // DataTables will trigger this event on every column it shows and\n        // hides individually\n\n\n        dt.on('column-visibility.dtr', function () {\n          // Use a small debounce to allow multiple columns to be set together\n          if (that._timer) {\n            clearTimeout(that._timer);\n          }\n\n          that._timer = setTimeout(function () {\n            that._timer = null;\n\n            that._classLogic();\n\n            that._resizeAuto();\n\n            that._resize(true);\n\n            that._redrawChildren();\n          }, 100);\n        }); // Redraw the details box on each draw which will happen if the data\n        // has changed. This is used until DataTables implements a native\n        // `updated` event for rows\n\n        dt.on('draw.dtr', function () {\n          that._redrawChildren();\n        });\n        $(dt.table().node()).addClass('dtr-' + details.type);\n      }\n\n      dt.on('column-reorder.dtr', function (e, settings, details) {\n        that._classLogic();\n\n        that._resizeAuto();\n\n        that._resize(true);\n      }); // Change in column sizes means we need to calc\n\n      dt.on('column-sizing.dtr', function () {\n        that._resizeAuto();\n\n        that._resize();\n      }); // On Ajax reload we want to reopen any child rows which are displayed\n      // by responsive\n\n      dt.on('preXhr.dtr', function () {\n        var rowIds = [];\n        dt.rows().every(function () {\n          if (this.child.isShown()) {\n            rowIds.push(this.id(true));\n          }\n        });\n        dt.one('draw.dtr', function () {\n          that._resizeAuto();\n\n          that._resize();\n\n          dt.rows(rowIds).every(function () {\n            that._detailsDisplay(this, false);\n          });\n        });\n      });\n      dt.on('draw.dtr', function () {\n        that._controlClass();\n      }).on('init.dtr', function (e, settings, details) {\n        if (e.namespace !== 'dt') {\n          return;\n        }\n\n        that._resizeAuto();\n\n        that._resize(); // If columns were hidden, then DataTables needs to adjust the\n        // column sizing\n\n\n        if ($.inArray(false, that.s.current)) {\n          dt.columns.adjust();\n        }\n      }); // First pass - draw the table for the current viewport size\n\n      this._resize();\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods\n     */\n\n    /**\n     * Calculate the visibility for the columns in a table for a given\n     * breakpoint. The result is pre-determined based on the class logic if\n     * class names are used to control all columns, but the width of the table\n     * is also used if there are columns which are to be automatically shown\n     * and hidden.\n     *\n     * @param  {string} breakpoint Breakpoint name to use for the calculation\n     * @return {array} Array of boolean values initiating the visibility of each\n     *   column.\n     *  @private\n     */\n    _columnsVisiblity: function (breakpoint) {\n      var dt = this.s.dt;\n      var columns = this.s.columns;\n      var i, ien; // Create an array that defines the column ordering based first on the\n      // column's priority, and secondly the column index. This allows the\n      // columns to be removed from the right if the priority matches\n\n      var order = columns.map(function (col, idx) {\n        return {\n          columnIdx: idx,\n          priority: col.priority\n        };\n      }).sort(function (a, b) {\n        if (a.priority !== b.priority) {\n          return a.priority - b.priority;\n        }\n\n        return a.columnIdx - b.columnIdx;\n      }); // Class logic - determine which columns are in this breakpoint based\n      // on the classes. If no class control (i.e. `auto`) then `-` is used\n      // to indicate this to the rest of the function\n\n      var display = $.map(columns, function (col, i) {\n        if (dt.column(i).visible() === false) {\n          return 'not-visible';\n        }\n\n        return col.auto && col.minWidth === null ? false : col.auto === true ? '-' : $.inArray(breakpoint, col.includeIn) !== -1;\n      }); // Auto column control - first pass: how much width is taken by the\n      // ones that must be included from the non-auto columns\n\n      var requiredWidth = 0;\n\n      for (i = 0, ien = display.length; i < ien; i++) {\n        if (display[i] === true) {\n          requiredWidth += columns[i].minWidth;\n        }\n      } // Second pass, use up any remaining width for other columns. For\n      // scrolling tables we need to subtract the width of the scrollbar. It\n      // may not be requires which makes this sub-optimal, but it would\n      // require another full redraw to make complete use of those extra few\n      // pixels\n\n\n      var scrolling = dt.settings()[0].oScroll;\n      var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n      var widthAvailable = dt.table().container().offsetWidth - bar;\n      var usedWidth = widthAvailable - requiredWidth; // Control column needs to always be included. This makes it sub-\n      // optimal in terms of using the available with, but to stop layout\n      // thrashing or overflow. Also we need to account for the control column\n      // width first so we know how much width is available for the other\n      // columns, since the control column might not be the first one shown\n\n      for (i = 0, ien = display.length; i < ien; i++) {\n        if (columns[i].control) {\n          usedWidth -= columns[i].minWidth;\n        }\n      } // Allow columns to be shown (counting by priority and then right to\n      // left) until we run out of room\n\n\n      var empty = false;\n\n      for (i = 0, ien = order.length; i < ien; i++) {\n        var colIdx = order[i].columnIdx;\n\n        if (display[colIdx] === '-' && !columns[colIdx].control && columns[colIdx].minWidth) {\n          // Once we've found a column that won't fit we don't let any\n          // others display either, or columns might disappear in the\n          // middle of the table\n          if (empty || usedWidth - columns[colIdx].minWidth < 0) {\n            empty = true;\n            display[colIdx] = false;\n          } else {\n            display[colIdx] = true;\n          }\n\n          usedWidth -= columns[colIdx].minWidth;\n        }\n      } // Determine if the 'control' column should be shown (if there is one).\n      // This is the case when there is a hidden column (that is not the\n      // control column). The two loops look inefficient here, but they are\n      // trivial and will fly through. We need to know the outcome from the\n      // first , before the action in the second can be taken\n\n\n      var showControl = false;\n\n      for (i = 0, ien = columns.length; i < ien; i++) {\n        if (!columns[i].control && !columns[i].never && display[i] === false) {\n          showControl = true;\n          break;\n        }\n      }\n\n      for (i = 0, ien = columns.length; i < ien; i++) {\n        if (columns[i].control) {\n          display[i] = showControl;\n        } // Replace not visible string with false from the control column detection above\n\n\n        if (display[i] === 'not-visible') {\n          display[i] = false;\n        }\n      } // Finally we need to make sure that there is at least one column that\n      // is visible\n\n\n      if ($.inArray(true, display) === -1) {\n        display[0] = true;\n      }\n\n      return display;\n    },\n\n    /**\n     * Create the internal `columns` array with information about the columns\n     * for the table. This includes determining which breakpoints the column\n     * will appear in, based upon class names in the column, which makes up the\n     * vast majority of this method.\n     *\n     * @private\n     */\n    _classLogic: function () {\n      var that = this;\n      var calc = {};\n      var breakpoints = this.c.breakpoints;\n      var dt = this.s.dt;\n      var columns = dt.columns().eq(0).map(function (i) {\n        var column = this.column(i);\n        var className = column.header().className;\n        var priority = dt.settings()[0].aoColumns[i].responsivePriority;\n        var dataPriority = column.header().getAttribute('data-priority');\n\n        if (priority === undefined) {\n          priority = dataPriority === undefined || dataPriority === null ? 10000 : dataPriority * 1;\n        }\n\n        return {\n          className: className,\n          includeIn: [],\n          auto: false,\n          control: false,\n          never: className.match(/\\bnever\\b/) ? true : false,\n          priority: priority\n        };\n      }); // Simply add a breakpoint to `includeIn` array, ensuring that there are\n      // no duplicates\n\n      var add = function (colIdx, name) {\n        var includeIn = columns[colIdx].includeIn;\n\n        if ($.inArray(name, includeIn) === -1) {\n          includeIn.push(name);\n        }\n      };\n\n      var column = function (colIdx, name, operator, matched) {\n        var size, i, ien;\n\n        if (!operator) {\n          columns[colIdx].includeIn.push(name);\n        } else if (operator === 'max-') {\n          // Add this breakpoint and all smaller\n          size = that._find(name).width;\n\n          for (i = 0, ien = breakpoints.length; i < ien; i++) {\n            if (breakpoints[i].width <= size) {\n              add(colIdx, breakpoints[i].name);\n            }\n          }\n        } else if (operator === 'min-') {\n          // Add this breakpoint and all larger\n          size = that._find(name).width;\n\n          for (i = 0, ien = breakpoints.length; i < ien; i++) {\n            if (breakpoints[i].width >= size) {\n              add(colIdx, breakpoints[i].name);\n            }\n          }\n        } else if (operator === 'not-') {\n          // Add all but this breakpoint\n          for (i = 0, ien = breakpoints.length; i < ien; i++) {\n            if (breakpoints[i].name.indexOf(matched) === -1) {\n              add(colIdx, breakpoints[i].name);\n            }\n          }\n        }\n      }; // Loop over each column and determine if it has a responsive control\n      // class\n\n\n      columns.each(function (col, i) {\n        var classNames = col.className.split(' ');\n        var hasClass = false; // Split the class name up so multiple rules can be applied if needed\n\n        for (var k = 0, ken = classNames.length; k < ken; k++) {\n          var className = classNames[k].trim();\n\n          if (className === 'all') {\n            // Include in all\n            hasClass = true;\n            col.includeIn = $.map(breakpoints, function (a) {\n              return a.name;\n            });\n            return;\n          } else if (className === 'none' || col.never) {\n            // Include in none (default) and no auto\n            hasClass = true;\n            return;\n          } else if (className === 'control' || className === 'dtr-control') {\n            // Special column that is only visible, when one of the other\n            // columns is hidden. This is used for the details control\n            hasClass = true;\n            col.control = true;\n            return;\n          }\n\n          $.each(breakpoints, function (j, breakpoint) {\n            // Does this column have a class that matches this breakpoint?\n            var brokenPoint = breakpoint.name.split('-');\n            var re = new RegExp('(min\\\\-|max\\\\-|not\\\\-)?(' + brokenPoint[0] + ')(\\\\-[_a-zA-Z0-9])?');\n            var match = className.match(re);\n\n            if (match) {\n              hasClass = true;\n\n              if (match[2] === brokenPoint[0] && match[3] === '-' + brokenPoint[1]) {\n                // Class name matches breakpoint name fully\n                column(i, breakpoint.name, match[1], match[2] + match[3]);\n              } else if (match[2] === brokenPoint[0] && !match[3]) {\n                // Class name matched primary breakpoint name with no qualifier\n                column(i, breakpoint.name, match[1], match[2]);\n              }\n            }\n          });\n        } // If there was no control class, then automatic sizing is used\n\n\n        if (!hasClass) {\n          col.auto = true;\n        }\n      });\n      this.s.columns = columns;\n    },\n\n    /**\n     * Update the cells to show the correct control class / button\n     * @private\n     */\n    _controlClass: function () {\n      if (this.c.details.type === 'inline') {\n        var dt = this.s.dt;\n        var columnsVis = this.s.current;\n        var firstVisible = $.inArray(true, columnsVis); // Remove from any cells which shouldn't have it\n\n        dt.cells(null, function (idx) {\n          return idx !== firstVisible;\n        }, {\n          page: 'current'\n        }).nodes().to$().filter('.dtr-control').removeClass('dtr-control');\n        dt.cells(null, firstVisible, {\n          page: 'current'\n        }).nodes().to$().addClass('dtr-control');\n      }\n    },\n\n    /**\n     * Show the details for the child row\n     *\n     * @param  {DataTables.Api} row    API instance for the row\n     * @param  {boolean}        update Update flag\n     * @private\n     */\n    _detailsDisplay: function (row, update) {\n      var that = this;\n      var dt = this.s.dt;\n      var details = this.c.details;\n\n      if (details && details.type !== false) {\n        var res = details.display(row, update, function () {\n          return details.renderer(dt, row[0], that._detailsObj(row[0]));\n        });\n\n        if (res === true || res === false) {\n          $(dt.table().node()).triggerHandler('responsive-display.dt', [dt, row, res, update]);\n        }\n      }\n    },\n\n    /**\n     * Initialisation for the details handler\n     *\n     * @private\n     */\n    _detailsInit: function () {\n      var that = this;\n      var dt = this.s.dt;\n      var details = this.c.details; // The inline type always uses the first child as the target\n\n      if (details.type === 'inline') {\n        details.target = 'td.dtr-control, th.dtr-control';\n      } // Keyboard accessibility\n\n\n      dt.on('draw.dtr', function () {\n        that._tabIndexes();\n      });\n\n      that._tabIndexes(); // Initial draw has already happened\n\n\n      $(dt.table().body()).on('keyup.dtr', 'td, th', function (e) {\n        if (e.keyCode === 13 && $(this).data('dtr-keyboard')) {\n          $(this).click();\n        }\n      }); // type.target can be a string jQuery selector or a column index\n\n      var target = details.target;\n      var selector = typeof target === 'string' ? target : 'td, th';\n\n      if (target !== undefined || target !== null) {\n        // Click handler to show / hide the details rows when they are available\n        $(dt.table().body()).on('click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n          // If the table is not collapsed (i.e. there is no hidden columns)\n          // then take no action\n          if (!$(dt.table().node()).hasClass('collapsed')) {\n            return;\n          } // Check that the row is actually a DataTable's controlled node\n\n\n          if ($.inArray($(this).closest('tr').get(0), dt.rows().nodes().toArray()) === -1) {\n            return;\n          } // For column index, we determine if we should act or not in the\n          // handler - otherwise it is already okay\n\n\n          if (typeof target === 'number') {\n            var targetIdx = target < 0 ? dt.columns().eq(0).length + target : target;\n\n            if (dt.cell(this).index().column !== targetIdx) {\n              return;\n            }\n          } // $().closest() includes itself in its check\n\n\n          var row = dt.row($(this).closest('tr')); // Check event type to do an action\n\n          if (e.type === 'click') {\n            // The renderer is given as a function so the caller can execute it\n            // only when they need (i.e. if hiding there is no point is running\n            // the renderer)\n            that._detailsDisplay(row, false);\n          } else if (e.type === 'mousedown') {\n            // For mouse users, prevent the focus ring from showing\n            $(this).css('outline', 'none');\n          } else if (e.type === 'mouseup') {\n            // And then re-allow at the end of the click\n            $(this).trigger('blur').css('outline', '');\n          }\n        });\n      }\n    },\n\n    /**\n     * Get the details to pass to a renderer for a row\n     * @param  {int} rowIdx Row index\n     * @private\n     */\n    _detailsObj: function (rowIdx) {\n      var that = this;\n      var dt = this.s.dt;\n      return $.map(this.s.columns, function (col, i) {\n        // Never and control columns should not be passed to the renderer\n        if (col.never || col.control) {\n          return;\n        }\n\n        var dtCol = dt.settings()[0].aoColumns[i];\n        return {\n          className: dtCol.sClass,\n          columnIndex: i,\n          data: dt.cell(rowIdx, i).render(that.c.orthogonal),\n          hidden: dt.column(i).visible() && !that.s.current[i],\n          rowIndex: rowIdx,\n          title: dtCol.sTitle !== null ? dtCol.sTitle : $(dt.column(i).header()).text()\n        };\n      });\n    },\n\n    /**\n     * Find a breakpoint object from a name\n     *\n     * @param  {string} name Breakpoint name to find\n     * @return {object}      Breakpoint description object\n     * @private\n     */\n    _find: function (name) {\n      var breakpoints = this.c.breakpoints;\n\n      for (var i = 0, ien = breakpoints.length; i < ien; i++) {\n        if (breakpoints[i].name === name) {\n          return breakpoints[i];\n        }\n      }\n    },\n\n    /**\n     * Re-create the contents of the child rows as the display has changed in\n     * some way.\n     *\n     * @private\n     */\n    _redrawChildren: function () {\n      var that = this;\n      var dt = this.s.dt;\n      dt.rows({\n        page: 'current'\n      }).iterator('row', function (settings, idx) {\n        var row = dt.row(idx);\n\n        that._detailsDisplay(dt.row(idx), true);\n      });\n    },\n\n    /**\n     * Alter the table display for a resized viewport. This involves first\n     * determining what breakpoint the window currently is in, getting the\n     * column visibilities to apply and then setting them.\n     *\n     * @param  {boolean} forceRedraw Force a redraw\n     * @private\n     */\n    _resize: function (forceRedraw) {\n      var that = this;\n      var dt = this.s.dt;\n      var width = $(window).innerWidth();\n      var breakpoints = this.c.breakpoints;\n      var breakpoint = breakpoints[0].name;\n      var columns = this.s.columns;\n      var i, ien;\n      var oldVis = this.s.current.slice(); // Determine what breakpoint we are currently at\n\n      for (i = breakpoints.length - 1; i >= 0; i--) {\n        if (width <= breakpoints[i].width) {\n          breakpoint = breakpoints[i].name;\n          break;\n        }\n      } // Show the columns for that break point\n\n\n      var columnsVis = this._columnsVisiblity(breakpoint);\n\n      this.s.current = columnsVis; // Set the class before the column visibility is changed so event\n      // listeners know what the state is. Need to determine if there are\n      // any columns that are not visible but can be shown\n\n      var collapsedClass = false;\n\n      for (i = 0, ien = columns.length; i < ien; i++) {\n        if (columnsVis[i] === false && !columns[i].never && !columns[i].control && !dt.column(i).visible() === false) {\n          collapsedClass = true;\n          break;\n        }\n      }\n\n      $(dt.table().node()).toggleClass('collapsed', collapsedClass);\n      var changed = false;\n      var visible = 0;\n      dt.columns().eq(0).each(function (colIdx, i) {\n        if (columnsVis[i] === true) {\n          visible++;\n        }\n\n        if (forceRedraw || columnsVis[i] !== oldVis[i]) {\n          changed = true;\n\n          that._setColumnVis(colIdx, columnsVis[i]);\n        }\n      });\n\n      if (changed) {\n        this._redrawChildren(); // Inform listeners of the change\n\n\n        $(dt.table().node()).trigger('responsive-resize.dt', [dt, this.s.current]); // If no records, update the \"No records\" display element\n\n        if (dt.page.info().recordsDisplay === 0) {\n          $('td', dt.table().body()).eq(0).attr('colspan', visible);\n        }\n      }\n\n      that._controlClass();\n    },\n\n    /**\n     * Determine the width of each column in the table so the auto column hiding\n     * has that information to work with. This method is never going to be 100%\n     * perfect since column widths can change slightly per page, but without\n     * seriously compromising performance this is quite effective.\n     *\n     * @private\n     */\n    _resizeAuto: function () {\n      var dt = this.s.dt;\n      var columns = this.s.columns; // Are we allowed to do auto sizing?\n\n      if (!this.c.auto) {\n        return;\n      } // Are there any columns that actually need auto-sizing, or do they all\n      // have classes defined\n\n\n      if ($.inArray(true, $.map(columns, function (c) {\n        return c.auto;\n      })) === -1) {\n        return;\n      } // Need to restore all children. They will be reinstated by a re-render\n\n\n      if (!$.isEmptyObject(_childNodeStore)) {\n        $.each(_childNodeStore, function (key) {\n          var idx = key.split('-');\n\n          _childNodesRestore(dt, idx[0] * 1, idx[1] * 1);\n        });\n      } // Clone the table with the current data in it\n\n\n      var tableWidth = dt.table().node().offsetWidth;\n      var columnWidths = dt.columns;\n      var clonedTable = dt.table().node().cloneNode(false);\n      var clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(clonedTable);\n      var clonedBody = $(dt.table().body()).clone(false, false).empty().appendTo(clonedTable); // use jQuery because of IE8\n\n      clonedTable.style.width = 'auto'; // Header\n\n      var headerCells = dt.columns().header().filter(function (idx) {\n        return dt.column(idx).visible();\n      }).to$().clone(false).css('display', 'table-cell').css('width', 'auto').css('min-width', 0); // Body rows - we don't need to take account of DataTables' column\n      // visibility since we implement our own here (hence the `display` set)\n\n      $(clonedBody).append($(dt.rows({\n        page: 'current'\n      }).nodes()).clone(false)).find('th, td').css('display', ''); // Footer\n\n      var footer = dt.table().footer();\n\n      if (footer) {\n        var clonedFooter = $(footer.cloneNode(false)).appendTo(clonedTable);\n        var footerCells = dt.columns().footer().filter(function (idx) {\n          return dt.column(idx).visible();\n        }).to$().clone(false).css('display', 'table-cell');\n        $('<tr/>').append(footerCells).appendTo(clonedFooter);\n      }\n\n      $('<tr/>').append(headerCells).appendTo(clonedHeader); // In the inline case extra padding is applied to the first column to\n      // give space for the show / hide icon. We need to use this in the\n      // calculation\n\n      if (this.c.details.type === 'inline') {\n        $(clonedTable).addClass('dtr-inline collapsed');\n      } // It is unsafe to insert elements with the same name into the DOM\n      // multiple times. For example, cloning and inserting a checked radio\n      // clears the chcecked state of the original radio.\n\n\n      $(clonedTable).find('[name]').removeAttr('name'); // A position absolute table would take the table out of the flow of\n      // our container element, bypassing the height and width (Scroller)\n\n      $(clonedTable).css('position', 'relative');\n      var inserted = $('<div/>').css({\n        width: 1,\n        height: 1,\n        overflow: 'hidden',\n        clear: 'both'\n      }).append(clonedTable);\n      inserted.insertBefore(dt.table().node()); // The cloned header now contains the smallest that each column can be\n\n      headerCells.each(function (i) {\n        var idx = dt.column.index('fromVisible', i);\n        columns[idx].minWidth = this.offsetWidth || 0;\n      });\n      inserted.remove();\n    },\n\n    /**\n     * Get the state of the current hidden columns - controlled by Responsive only\n     */\n    _responsiveOnlyHidden: function () {\n      var dt = this.s.dt;\n      return $.map(this.s.current, function (v, i) {\n        // If the column is hidden by DataTables then it can't be hidden by\n        // Responsive!\n        if (dt.column(i).visible() === false) {\n          return true;\n        }\n\n        return v;\n      });\n    },\n\n    /**\n     * Set a column's visibility.\n     *\n     * We don't use DataTables' column visibility controls in order to ensure\n     * that column visibility can Responsive can no-exist. Since only IE8+ is\n     * supported (and all evergreen browsers of course) the control of the\n     * display attribute works well.\n     *\n     * @param {integer} col      Column index\n     * @param {boolean} showHide Show or hide (true or false)\n     * @private\n     */\n    _setColumnVis: function (col, showHide) {\n      var dt = this.s.dt;\n      var display = showHide ? '' : 'none'; // empty string will remove the attr\n\n      $(dt.column(col).header()).css('display', display);\n      $(dt.column(col).footer()).css('display', display);\n      dt.column(col).nodes().to$().css('display', display); // If the are child nodes stored, we might need to reinsert them\n\n      if (!$.isEmptyObject(_childNodeStore)) {\n        dt.cells(null, col).indexes().each(function (idx) {\n          _childNodesRestore(dt, idx.row, idx.column);\n        });\n      }\n    },\n\n    /**\n     * Update the cell tab indexes for keyboard accessibility. This is called on\n     * every table draw - that is potentially inefficient, but also the least\n     * complex option given that column visibility can change on the fly. Its a\n     * shame user-focus was removed from CSS 3 UI, as it would have solved this\n     * issue with a single CSS statement.\n     *\n     * @private\n     */\n    _tabIndexes: function () {\n      var dt = this.s.dt;\n      var cells = dt.cells({\n        page: 'current'\n      }).nodes().to$();\n      var ctx = dt.settings()[0];\n      var target = this.c.details.target;\n      cells.filter('[data-dtr-keyboard]').removeData('[data-dtr-keyboard]');\n\n      if (typeof target === 'number') {\n        dt.cells(null, target, {\n          page: 'current'\n        }).nodes().to$().attr('tabIndex', ctx.iTabIndex).data('dtr-keyboard', 1);\n      } else {\n        // This is a bit of a hack - we need to limit the selected nodes to just\n        // those of this table\n        if (target === 'td:first-child, th:first-child') {\n          target = '>td:first-child, >th:first-child';\n        }\n\n        $(target, dt.rows({\n          page: 'current'\n        }).nodes()).attr('tabIndex', ctx.iTabIndex).data('dtr-keyboard', 1);\n      }\n    }\n  });\n  /**\n   * List of default breakpoints. Each item in the array is an object with two\n   * properties:\n   *\n   * * `name` - the breakpoint name.\n   * * `width` - the breakpoint width\n   *\n   * @name Responsive.breakpoints\n   * @static\n   */\n\n  Responsive.breakpoints = [{\n    name: 'desktop',\n    width: Infinity\n  }, {\n    name: 'tablet-l',\n    width: 1024\n  }, {\n    name: 'tablet-p',\n    width: 768\n  }, {\n    name: 'mobile-l',\n    width: 480\n  }, {\n    name: 'mobile-p',\n    width: 320\n  }];\n  /**\n   * Display methods - functions which define how the hidden data should be shown\n   * in the table.\n   *\n   * @namespace\n   * @name Responsive.defaults\n   * @static\n   */\n\n  Responsive.display = {\n    childRow: function (row, update, render) {\n      if (update) {\n        if ($(row.node()).hasClass('parent')) {\n          row.child(render(), 'child').show();\n          return true;\n        }\n      } else {\n        if (!row.child.isShown()) {\n          row.child(render(), 'child').show();\n          $(row.node()).addClass('parent');\n          return true;\n        } else {\n          row.child(false);\n          $(row.node()).removeClass('parent');\n          return false;\n        }\n      }\n    },\n    childRowImmediate: function (row, update, render) {\n      if (!update && row.child.isShown() || !row.responsive.hasHidden()) {\n        // User interaction and the row is show, or nothing to show\n        row.child(false);\n        $(row.node()).removeClass('parent');\n        return false;\n      } else {\n        // Display\n        row.child(render(), 'child').show();\n        $(row.node()).addClass('parent');\n        return true;\n      }\n    },\n    // This is a wrapper so the modal options for Bootstrap and jQuery UI can\n    // have options passed into them. This specific one doesn't need to be a\n    // function but it is for consistency in the `modal` name\n    modal: function (options) {\n      return function (row, update, render) {\n        if (!update) {\n          // Show a modal\n          var close = function () {\n            modal.remove(); // will tidy events for us\n\n            $(document).off('keypress.dtr');\n          };\n\n          var modal = $('<div class=\"dtr-modal\"/>').append($('<div class=\"dtr-modal-display\"/>').append($('<div class=\"dtr-modal-content\"/>').append(render())).append($('<div class=\"dtr-modal-close\">&times;</div>').click(function () {\n            close();\n          }))).append($('<div class=\"dtr-modal-background\"/>').click(function () {\n            close();\n          })).appendTo('body');\n          $(document).on('keyup.dtr', function (e) {\n            if (e.keyCode === 27) {\n              e.stopPropagation();\n              close();\n            }\n          });\n        } else {\n          $('div.dtr-modal-content').empty().append(render());\n        }\n\n        if (options && options.header) {\n          $('div.dtr-modal-content').prepend('<h2>' + options.header(row) + '</h2>');\n        }\n      };\n    }\n  };\n  var _childNodeStore = {};\n\n  function _childNodes(dt, row, col) {\n    var name = row + '-' + col;\n\n    if (_childNodeStore[name]) {\n      return _childNodeStore[name];\n    } // https://jsperf.com/childnodes-array-slice-vs-loop\n\n\n    var nodes = [];\n    var children = dt.cell(row, col).node().childNodes;\n\n    for (var i = 0, ien = children.length; i < ien; i++) {\n      nodes.push(children[i]);\n    }\n\n    _childNodeStore[name] = nodes;\n    return nodes;\n  }\n\n  function _childNodesRestore(dt, row, col) {\n    var name = row + '-' + col;\n\n    if (!_childNodeStore[name]) {\n      return;\n    }\n\n    var node = dt.cell(row, col).node();\n    var store = _childNodeStore[name];\n    var parent = store[0].parentNode;\n    var parentChildren = parent.childNodes;\n    var a = [];\n\n    for (var i = 0, ien = parentChildren.length; i < ien; i++) {\n      a.push(parentChildren[i]);\n    }\n\n    for (var j = 0, jen = a.length; j < jen; j++) {\n      node.appendChild(a[j]);\n    }\n\n    _childNodeStore[name] = undefined;\n  }\n  /**\n   * Display methods - functions which define how the hidden data should be shown\n   * in the table.\n   *\n   * @namespace\n   * @name Responsive.defaults\n   * @static\n   */\n\n\n  Responsive.renderer = {\n    listHiddenNodes: function () {\n      return function (api, rowIdx, columns) {\n        var ul = $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>');\n        var found = false;\n        var data = $.each(columns, function (i, col) {\n          if (col.hidden) {\n            var klass = col.className ? 'class=\"' + col.className + '\"' : '';\n            $('<li ' + klass + ' data-dtr-index=\"' + col.columnIndex + '\" data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<span class=\"dtr-title\">' + col.title + '</span> ' + '</li>').append($('<span class=\"dtr-data\"/>').append(_childNodes(api, col.rowIndex, col.columnIndex))) // api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n            .appendTo(ul);\n            found = true;\n          }\n        });\n        return found ? ul : false;\n      };\n    },\n    listHidden: function () {\n      return function (api, rowIdx, columns) {\n        var data = $.map(columns, function (col) {\n          var klass = col.className ? 'class=\"' + col.className + '\"' : '';\n          return col.hidden ? '<li ' + klass + ' data-dtr-index=\"' + col.columnIndex + '\" data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<span class=\"dtr-title\">' + col.title + '</span> ' + '<span class=\"dtr-data\">' + col.data + '</span>' + '</li>' : '';\n        }).join('');\n        return data ? $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>').append(data) : false;\n      };\n    },\n    tableAll: function (options) {\n      options = $.extend({\n        tableClass: ''\n      }, options);\n      return function (api, rowIdx, columns) {\n        var data = $.map(columns, function (col) {\n          var klass = col.className ? 'class=\"' + col.className + '\"' : '';\n          return '<tr ' + klass + ' data-dt-row=\"' + col.rowIndex + '\" data-dt-column=\"' + col.columnIndex + '\">' + '<td>' + col.title + ':' + '</td> ' + '<td>' + col.data + '</td>' + '</tr>';\n        }).join('');\n        return $('<table class=\"' + options.tableClass + ' dtr-details\" width=\"100%\"/>').append(data);\n      };\n    }\n  };\n  /**\n   * Responsive default settings for initialisation\n   *\n   * @namespace\n   * @name Responsive.defaults\n   * @static\n   */\n\n  Responsive.defaults = {\n    /**\n     * List of breakpoints for the instance. Note that this means that each\n     * instance can have its own breakpoints. Additionally, the breakpoints\n     * cannot be changed once an instance has been creased.\n     *\n     * @type {Array}\n     * @default Takes the value of `Responsive.breakpoints`\n     */\n    breakpoints: Responsive.breakpoints,\n\n    /**\n     * Enable / disable auto hiding calculations. It can help to increase\n     * performance slightly if you disable this option, but all columns would\n     * need to have breakpoint classes assigned to them\n     *\n     * @type {Boolean}\n     * @default  `true`\n     */\n    auto: true,\n\n    /**\n     * Details control. If given as a string value, the `type` property of the\n     * default object is set to that value, and the defaults used for the rest\n     * of the object - this is for ease of implementation.\n     *\n     * The object consists of the following properties:\n     *\n     * * `display` - A function that is used to show and hide the hidden details\n     * * `renderer` - function that is called for display of the child row data.\n     *   The default function will show the data from the hidden columns\n     * * `target` - Used as the selector for what objects to attach the child\n     *   open / close to\n     * * `type` - `false` to disable the details display, `inline` or `column`\n     *   for the two control types\n     *\n     * @type {Object|string}\n     */\n    details: {\n      display: Responsive.display.childRow,\n      renderer: Responsive.renderer.listHidden(),\n      target: 0,\n      type: 'inline'\n    },\n\n    /**\n     * Orthogonal data request option. This is used to define the data type\n     * requested when Responsive gets the data to show in the child row.\n     *\n     * @type {String}\n     */\n    orthogonal: 'display'\n  };\n  /*\n   * API\n   */\n\n  var Api = $.fn.dataTable.Api; // Doesn't do anything - work around for a bug in DT... Not documented\n\n  Api.register('responsive()', function () {\n    return this;\n  });\n  Api.register('responsive.index()', function (li) {\n    li = $(li);\n    return {\n      column: li.data('dtr-index'),\n      row: li.parent().data('dtr-index')\n    };\n  });\n  Api.register('responsive.rebuild()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx._responsive) {\n        ctx._responsive._classLogic();\n      }\n    });\n  });\n  Api.register('responsive.recalc()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx._responsive) {\n        ctx._responsive._resizeAuto();\n\n        ctx._responsive._resize();\n      }\n    });\n  });\n  Api.register('responsive.hasHidden()', function () {\n    var ctx = this.context[0];\n    return ctx._responsive ? $.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1 : false;\n  });\n  Api.registerPlural('columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n    return this.iterator('column', function (settings, column) {\n      return settings._responsive ? settings._responsive._responsiveOnlyHidden()[column] : false;\n    }, 1);\n  });\n  /**\n   * Version information\n   *\n   * @name Responsive.version\n   * @static\n   */\n\n  Responsive.version = '2.2.7';\n  $.fn.dataTable.Responsive = Responsive;\n  $.fn.DataTable.Responsive = Responsive; // Attach a listener to the document which listens for DataTables initialisation\n  // events so we can automatically initialise\n\n  $(document).on('preInit.dt.dtr', function (e, settings, json) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    if ($(settings.nTable).hasClass('responsive') || $(settings.nTable).hasClass('dt-responsive') || settings.oInit.responsive || DataTable.defaults.responsive) {\n      var init = settings.oInit.responsive;\n\n      if (init !== false) {\n        new Responsive(settings, $.isPlainObject(init) ? init : {});\n      }\n    }\n  });\n  return Responsive;\n});","map":{"version":3,"sources":["/home/ubuntu/PROYECTOS/vikijor/MotorWorld/Motor-World/cms/node_modules/datatables.net-responsive/js/dataTables.responsive.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","Responsive","settings","opts","versionCheck","s","dt","Api","columns","current","responsive","details","type","c","extend","defaults","_constructor","prototype","that","dtPrivateSettings","oldWindowWidth","innerWidth","_responsive","on","util","throttle","width","_resize","oApi","_fnCallbackReg","tr","data","idx","inArray","each","i","column","index","css","off","table","body","cells","nodes","to$","removeClass","val","_setColumnVis","breakpoints","sort","a","b","_classLogic","_resizeAuto","_detailsInit","_timer","clearTimeout","setTimeout","_redrawChildren","node","addClass","e","rowIds","rows","every","child","isShown","push","id","one","_detailsDisplay","_controlClass","namespace","adjust","_columnsVisiblity","breakpoint","ien","order","map","col","columnIdx","priority","display","visible","auto","minWidth","includeIn","requiredWidth","length","scrolling","oScroll","bar","sY","sX","iBarWidth","widthAvailable","container","offsetWidth","usedWidth","control","empty","colIdx","showControl","never","calc","eq","className","header","aoColumns","responsivePriority","dataPriority","getAttribute","match","add","name","operator","matched","size","_find","indexOf","classNames","split","hasClass","k","ken","trim","j","brokenPoint","re","RegExp","columnsVis","firstVisible","page","filter","row","update","res","renderer","_detailsObj","triggerHandler","target","_tabIndexes","keyCode","click","selector","closest","get","toArray","targetIdx","cell","trigger","rowIdx","dtCol","sClass","columnIndex","render","orthogonal","hidden","rowIndex","title","sTitle","text","iterator","forceRedraw","oldVis","slice","collapsedClass","toggleClass","changed","info","recordsDisplay","attr","isEmptyObject","_childNodeStore","key","_childNodesRestore","tableWidth","columnWidths","clonedTable","cloneNode","clonedHeader","appendTo","clonedBody","clone","style","headerCells","append","find","footer","clonedFooter","footerCells","removeAttr","inserted","height","overflow","clear","insertBefore","remove","_responsiveOnlyHidden","v","showHide","indexes","ctx","removeData","iTabIndex","Infinity","childRow","show","childRowImmediate","hasHidden","modal","options","close","stopPropagation","prepend","_childNodes","children","childNodes","store","parent","parentNode","parentChildren","jen","appendChild","listHiddenNodes","api","ul","found","klass","listHidden","join","tableAll","tableClass","register","li","context","registerPlural","version","json","nTable","oInit","init","isPlainObject"],"mappings":"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","sourcesContent":["/*! Responsive 2.2.7\n * 2014-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.2.7\n * @file        dataTables.responsive.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2014-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function ( settings, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.10' ) ) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.10 or newer';\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( settings ),\n\t\tcolumns: [],\n\t\tcurrent: []\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif ( this.s.dt.settings()[0].responsive ) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif ( opts && typeof opts.details === 'string' ) {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if ( opts && opts.details === false ) {\n\t\topts.details = { type: false };\n\t}\n\telse if ( opts && opts.details === true ) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend( Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {\n\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\tvar width = $(window).innerWidth();\n\n\t\t\tif ( width !== oldWindowWidth ) {\n\t\t\t\tthat._resize();\n\t\t\t\toldWindowWidth = width;\n\t\t\t}\n\t\t} ) );\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\n\t\t\tif ( $.inArray( false, that.s.current ) !== -1 ) {\n\t\t\t\t$('>td, >th', tr).each( function ( i ) {\n\t\t\t\t\tvar idx = dt.column.index( 'toData', i );\n\n\t\t\t\t\tif ( that.s.current[idx] === false ) {\n\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Destroy event handler\n\t\tdt.on( 'destroy.dtr', function () {\n\t\t\tdt.off( '.dtr' );\n\t\t\t$( dt.table().body() ).off( '.dtr' );\n\t\t\t$(window).off( 'resize.dtr orientationchange.dtr' );\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each( that.s.current, function ( i, val ) {\n\t\t\t\tif ( val === false ) {\n\t\t\t\t\tthat._setColumnVis( i, true );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort( function (a, b) {\n\t\t\treturn a.width < b.width ? 1 :\n\t\t\t\ta.width > b.width ? -1 : 0;\n\t\t} );\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif ( details.type !== false ) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on( 'column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif ( that._timer ) {\n\t\t\t\t\tclearTimeout( that._timer );\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout( function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100 );\n\t\t\t} );\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on( 'draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t} );\n\n\t\t\t$(dt.table().node()).addClass( 'dtr-'+details.type );\n\t\t}\n\n\t\tdt.on( 'column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t} );\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on( 'column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on( 'preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every( function () {\n\t\t\t\tif ( this.child.isShown() ) {\n\t\t\t\t\trowIds.push( this.id(true) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdt.one( 'draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows( rowIds ).every( function () {\n\t\t\t\t\tthat._detailsDisplay( this, false );\n\t\t\t\t} );\n\t\t\t} );\n\t\t});\n\n\t\tdt\n\t\t\t.on( 'draw.dtr', function () {\n\t\t\t\tthat._controlClass();\n\t\t\t})\n\t\t\t.on( 'init.dtr', function (e, settings, details) {\n\t\t\t\tif ( e.namespace !== 'dt' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t\t// column sizing\n\t\t\t\tif ( $.inArray( false, that.s.current ) ) {\n\t\t\t\t\tdt.columns.adjust();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function ( breakpoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map( function ( col, idx ) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.sort( function ( a, b ) {\n\t\t\t\tif ( a.priority !== b.priority ) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t} );\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map( columns, function ( col, i ) {\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null ?\n\t\t\t\tfalse :\n\t\t\t\tcol.auto === true ?\n\t\t\t\t\t'-' :\n\t\t\t\t\t$.inArray( breakpoint, col.includeIn ) !== -1;\n\t\t} );\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( display[i] === true ) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor ( i=0, ien=order.length ; i<ien ; i++ ) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( ! columns[i].control && ! columns[i].never && display[i] === false ) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif ( display[i] === 'not-visible' ) {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ( $.inArray( true, display ) === -1 ) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function ()\n\t{\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt.columns().eq(0).map( function (i) {\n\t\t\tvar column = this.column(i);\n\t\t\tvar className = column.header().className;\n\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\t\t\tvar dataPriority = column.header().getAttribute('data-priority');\n\n\t\t\tif ( priority === undefined ) {\n\t\t\t\tpriority = dataPriority === undefined || dataPriority === null?\n\t\t\t\t\t10000 :\n\t\t\t\t\tdataPriority * 1;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tincludeIn: [],\n\t\t\t\tauto:      false,\n\t\t\t\tcontrol:   false,\n\t\t\t\tnever:     className.match(/\\bnever\\b/) ? true : false,\n\t\t\t\tpriority:  priority\n\t\t\t};\n\t\t} );\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function ( colIdx, name ) {\n\t\t\tvar includeIn = columns[ colIdx ].includeIn;\n\n\t\t\tif ( $.inArray( name, includeIn ) === -1 ) {\n\t\t\t\tincludeIn.push( name );\n\t\t\t}\n\t\t};\n\n\t\tvar column = function ( colIdx, name, operator, matched ) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif ( ! operator ) {\n\t\t\t\tcolumns[ colIdx ].includeIn.push( name );\n\t\t\t}\n\t\t\telse if ( operator === 'max-' ) {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width <= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'min-' ) {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width >= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'not-' ) {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].name.indexOf( matched ) === -1 ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each( function ( col, i ) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor ( var k=0, ken=classNames.length ; k<ken ; k++ ) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif ( className === 'all' ) {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map( breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'none' || col.never ) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'control' || className === 'dtr-control' ) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each( breakpoints, function ( j, breakpoint ) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );\n\t\t\t\t\tvar match = className.match( re );\n\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2]+match[3] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( match[2] === brokenPoint[0] && ! match[3] ) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif ( ! hasClass ) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function ()\n\t{\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction(idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{page: 'current'}\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, {page: 'current'})\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function ( row, update )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\tif ( details && details.type !== false ) {\n\t\t\tvar res = details.display( row, update, function () {\n\t\t\t\treturn details.renderer(\n\t\t\t\t\tdt, row[0], that._detailsObj(row[0])\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tif ( res === true || res === false ) {\n\t\t\t\t$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function ()\n\t{\n\t\tvar that    = this;\n\t\tvar dt      = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif ( details.type === 'inline' ) {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on( 'draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t} );\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {\n\t\t\tif ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t} );\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target   = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif ( target !== undefined || target !== null ) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$( dt.table().body() )\n\t\t\t\t.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t\t// then take no action\n\t\t\t\t\tif ( ! $(dt.table().node()).hasClass('collapsed' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\t\tif ( $.inArray( $(this).closest('tr').get(0), dt.rows().nodes().toArray() ) === -1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\t\tif ( typeof target === 'number' ) {\n\t\t\t\t\t\tvar targetIdx = target < 0 ?\n\t\t\t\t\t\t\tdt.columns().eq(0).length + target :\n\t\t\t\t\t\t\ttarget;\n\n\t\t\t\t\t\tif ( dt.cell( this ).index().column !== targetIdx ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\t\tvar row = dt.row( $(this).closest('tr') );\n\n\t\t\t\t\t// Check event type to do an action\n\t\t\t\t\tif ( e.type === 'click' ) {\n\t\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t\t// the renderer)\n\t\t\t\t\t\tthat._detailsDisplay( row, false );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mousedown' ) {\n\t\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mouseup' ) {\n\t\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function ( rowIdx )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.columns, function( col, i ) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif ( col.never || col.control ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[ i ];\n\n\t\t\treturn {\n\t\t\t\tclassName:   dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),\n\t\t\t\thidden:      dt.column( i ).visible() && !that.s.current[ i ],\n\t\t\t\trowIndex:    rowIdx,\n\t\t\t\ttitle:       dtCol.sTitle !== null ?\n\t\t\t\t\tdtCol.sTitle :\n\t\t\t\t\t$(dt.column(i).header()).text()\n\t\t\t};\n\t\t} );\n\t},\n\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function ( name )\n\t{\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\tif ( breakpoints[i].name === name ) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {\n\t\t\tvar row = dt.row( idx );\n\n\t\t\tthat._detailsDisplay( dt.row( idx ), true );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw)\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor ( i=breakpoints.length-1 ; i>=0 ; i-- ) {\n\t\t\tif ( width <= breakpoints[i].width ) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity( breakpoint );\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control && ! dt.column(i).visible() === false ) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\n\t\tdt.columns().eq(0).each( function ( colIdx, i ) {\n\t\t\tif ( columnsVis[i] === true ) {\n\t\t\t\tvisible++;\n\t\t\t}\n\n\t\t\tif ( forceRedraw || columnsVis[i] !== oldVis[i] ) {\n\t\t\t\tchanged = true;\n\t\t\t\tthat._setColumnVis( colIdx, columnsVis[i] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( changed ) {\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif ( dt.page.info().recordsDisplay === 0 ) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif ( ! this.c.auto ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Need to restore all children. They will be reinstated by a re-render\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\t$.each( _childNodeStore, function ( key ) {\n\t\t\t\tvar idx = key.split('-');\n\n\t\t\t\t_childNodesRestore( dt, idx[0]*1, idx[1]*1 );\n\t\t\t} );\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth   = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable  = dt.table().node().cloneNode( false );\n\t\tvar clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );\n\t\tvar clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tvar headerCells = dt.columns()\n\t\t\t.header()\n\t\t\t.filter( function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t} )\n\t\t\t.to$()\n\t\t\t.clone( false )\n\t\t\t.css( 'display', 'table-cell' )\n\t\t\t.css( 'width', 'auto' )\n\t\t\t.css( 'min-width', 0 );\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\n\t\t\t.find( 'th, td' ).css( 'display', '' );\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif ( footer ) {\n\t\t\tvar clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );\n\t\t\tvar footerCells = dt.columns()\n\t\t\t\t.footer()\n\t\t\t\t.filter( function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t} )\n\t\t\t\t.to$()\n\t\t\t\t.clone( false )\n\t\t\t\t.css( 'display', 'table-cell' );\n\n\t\t\t$('<tr/>')\n\t\t\t\t.append( footerCells )\n\t\t\t\t.appendTo( clonedFooter );\n\t\t}\n\n\t\t$('<tr/>')\n\t\t\t.append( headerCells )\n\t\t\t.appendTo( clonedHeader );\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\t$(clonedTable).addClass( 'dtr-inline collapsed' );\n\t\t}\n\t\t\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$( clonedTable ).find( '[name]' ).removeAttr( 'name' );\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$( clonedTable ).css( 'position', 'relative' )\n\t\t\n\t\tvar inserted = $('<div/>')\n\t\t\t.css( {\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t} )\n\t\t\t.append( clonedTable );\n\n\t\tinserted.insertBefore( dt.table().node() );\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each( function (i) {\n\t\t\tvar idx = dt.column.index( 'fromVisible', i );\n\t\t\tcolumns[ idx ].minWidth =  this.offsetWidth || 0;\n\t\t} );\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t} );\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function ( col, showHide )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$( dt.column( col ).header() ).css( 'display', display );\n\t\t$( dt.column( col ).footer() ).css( 'display', display );\n\t\tdt.column( col ).nodes().to$().css( 'display', display );\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\tdt.cells( null, col ).indexes().each( function (idx) {\n\t\t\t\t_childNodesRestore( dt, idx.row, idx.column );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells( { page: 'current' } ).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );\n\n\t\tif ( typeof target === 'number' ) {\n\t\t\tdt.cells( null, target, { page: 'current' } ).nodes().to$()\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif ( target === 'td:first-child, th:first-child' ) {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$( target, dt.rows( { page: 'current' } ).nodes() )\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t}\n} );\n\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop',  width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function ( row, update, render ) {\n\t\tif ( update ) {\n\t\t\tif ( $(row.node()).hasClass('parent') ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( ! row.child.isShown()  ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\t\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child( false );\n\t\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function ( row, update, render ) {\n\t\tif ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child( false );\n\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child( render(), 'child' ).show();\n\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function ( options ) {\n\t\treturn function ( row, update, render ) {\n\t\t\tif ( ! update ) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off( 'keypress.dtr' );\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t.append( render() )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-close\">&times;</div>' )\n\t\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-background\"/>')\n\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( 'body' );\n\n\t\t\t\t$(document).on( 'keyup.dtr', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div.dtr-modal-content')\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\t\t\t}\n\n\t\t\tif ( options && options.header ) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>'+options.header( row )+'</h2>'\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n};\n\n\nvar _childNodeStore = {};\n\nfunction _childNodes( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( _childNodeStore[ name ] ) {\n\t\treturn _childNodeStore[ name ];\n\t}\n\n\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\tvar nodes = [];\n\tvar children = dt.cell( row, col ).node().childNodes;\n\tfor ( var i=0, ien=children.length ; i<ien ; i++ ) {\n\t\tnodes.push( children[i] );\n\t}\n\n\t_childNodeStore[ name ] = nodes;\n\n\treturn nodes;\n}\n\nfunction _childNodesRestore( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( ! _childNodeStore[ name ] ) {\n\t\treturn;\n\t}\n\n\tvar node = dt.cell( row, col ).node();\n\tvar store = _childNodeStore[ name ];\n\tvar parent = store[0].parentNode;\n\tvar parentChildren = parent.childNodes;\n\tvar a = [];\n\n\tfor ( var i=0, ien=parentChildren.length ; i<ien ; i++ ) {\n\t\ta.push( parentChildren[i] );\n\t}\n\n\tfor ( var j=0, jen=a.length ; j<jen ; j++ ) {\n\t\tnode.appendChild( a[j] );\n\t}\n\n\t_childNodeStore[ name ] = undefined;\n}\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar ul = $('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>');\n\t\t\tvar found = false;\n\n\t\t\tvar data = $.each( columns, function ( i, col ) {\n\t\t\t\tif ( col.hidden ) {\n\t\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<span class=\"dtr-data\"/>').append( _childNodes( api, col.rowIndex, col.columnIndex ) ) )// api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo( ul );\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn found ?\n\t\t\t\tul :\n\t\t\t\tfalse;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn col.hidden ?\n\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'<span class=\"dtr-data\">'+\n\t\t\t\t\t\t\tcol.data+\n\t\t\t\t\t\t'</span>'+\n\t\t\t\t\t'</li>' :\n\t\t\t\t\t'';\n\t\t\t} ).join('');\n\n\t\t\treturn data ?\n\t\t\t\t$('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>').append( data ) :\n\t\t\t\tfalse;\n\t\t}\n\t},\n\n\ttableAll: function ( options ) {\n\t\toptions = $.extend( {\n\t\t\ttableClass: ''\n\t\t}, options );\n\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn '<tr '+klass+' data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<td>'+col.title+':'+'</td> '+\n\t\t\t\t\t\t'<td>'+col.data+'</td>'+\n\t\t\t\t\t'</tr>';\n\t\t\t} ).join('');\n\n\t\t\treturn $('<table class=\"'+options.tableClass+' dtr-details\" width=\"100%\"/>').append( data );\n\t\t}\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register( 'responsive()', function () {\n\treturn this;\n} );\n\nApi.register( 'responsive.index()', function ( li ) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow:    li.parent().data('dtr-index')\n\t};\n} );\n\nApi.register( 'responsive.rebuild()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.recalc()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive ?\n\t\t$.inArray( false, ctx._responsive._responsiveOnlyHidden() ) !== -1 :\n\t\tfalse;\n} );\n\nApi.registerPlural( 'columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings._responsive ?\n\t\t\tsettings._responsive._responsiveOnlyHidden()[ column ] :\n\t\t\tfalse;\n\t}, 1 );\n} );\n\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.2.7';\n\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtr', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tif ( $(settings.nTable).hasClass( 'responsive' ) ||\n\t\t $(settings.nTable).hasClass( 'dt-responsive' ) ||\n\t\t settings.oInit.responsive ||\n\t\t DataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif ( init !== false ) {\n\t\t\tnew Responsive( settings, $.isPlainObject( init ) ? init : {}  );\n\t\t}\n\t}\n} );\n\n\nreturn Responsive;\n}));\n"]},"metadata":{},"sourceType":"script"}